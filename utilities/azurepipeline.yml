name: $(date:yyyyMMdd)$(rev:.r)
variables:
  BROWSER: ${{ variables.BROWSER }}
  ROLE_GROUP: ${{ variables.ROLE_GROUP }}

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/iCargoUIExternalExcel_16Dec

jobs:
- job: Job_1
  displayName: Build and Copy Artifacts
  cancelTimeoutInMinutes: 1
  pool:
    name: QE-Win10-iCargo
  steps:
  - checkout: self
    clean: true
    fetchTags: false
  - task: NuGetToolInstaller@0
    displayName: Use NuGet 6.0
    inputs:
      versionSpec: 6.0
  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      solution: '**\*.sln'
  - task: VSBuild@1
    displayName: Build solution
    inputs:
      platform: 'Any CPU'
      configuration: 'Release'
      clean: true
  - task: CopyFiles@2
    displayName: 'Copy Files to: Staging Directory'
    inputs:
      SourceFolder: $(Build.SourcesDirectory)
      TargetFolder: ' $(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: iCargoUIAutomation'
    inputs:
      ArtifactName: iCargoUIAutomation

- job: Job_2
  displayName: Execution job
  timeoutInMinutes: 240
  dependsOn: Job_1
  pool:
    name: QE-Win10-iCargo
  steps:
  - checkout: self
    clean: true
    fetchTags: false
  - task: PowerShell@2
    displayName: PowerShell Script
    inputs:
      targetType: inline
      script: |
        echo "Starting Role Group Connection Script"
        echo "Role Group: $(ROLE_GROUP)"

        $ServerList = @("IGQW10ICGQE01", "IGQW10ICGQE02", "IGQW10ICGQE03", "IGQW10ICGQE04", "IGQW10ICGQE05")
        $User = "Airgroup\iusr_qasvc"
        $Password = "Q@svcUS3R!"

        foreach ($Server in $ServerList) {
          echo "Connecting to $Server"
          cmdkey /generic:TERMSRV/$Server /user:$User /pass:$Password
          mstsc /v:$Server
        }
  - task: DownloadBuildArtifacts@1
    displayName: Download Build Artifacts
    inputs:
      artifactName: iCargoUIAutomation
      extractTars: false
  - task: VSTest@3
    displayName: VsTest - testAssemblies
    inputs:
      testAssemblyVer2: |
        **\iCargoUIAutomation.dll
        **\$(buildConfiguration)\*[Tt]est.dll
        **\$(buildConfiguration)\*test*.dll
        !**\*Microsoft.VisualStudio.TestPlatform*
        !**\obj\**
      searchFolder: $(System.ArtifactsDirectory)
      testFiltercriteria: TestCategory=CAP018_BKG_00001
      testRunTitle: iCargo.QA_$(Date:yyyyMMdd)
      rerunFailedTests: true
      rerunFailedThreshold: 91
