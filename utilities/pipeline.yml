trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop

variables:
  solution: '**/*.sln' # Path to the solution file or project file
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  testResults: 'TestResults'

stages:
  - stage: Build
    displayName: 'Build Automation Project'
    jobs:
      - job: Build
        displayName: 'Build Solution'
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: sdk
              version: '6.x'
            displayName: 'Install .NET Core SDK'

          - task: NuGetToolInstaller@1
            displayName: 'Install NuGet'

          - task: NuGetCommand@2
            inputs:
              command: restore
              restoreSolution: '$(solution)'
            displayName: 'Restore NuGet Packages'

          - task: VSBuild@1
            inputs:
              solution: '$(solution)'
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'
            displayName: 'Build Solution'

  - stage: Test
    displayName: 'Run Automation Tests'
    dependsOn: Build
    jobs:
      - job: RunTests
        displayName: 'Run Tests and Publish Results'
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: sdk
              version: '6.x'
            displayName: 'Install .NET Core SDK'

          - script: |
              dotnet test --logger trx --results-directory $(testResults) --filter Category=SmokeTests
            displayName: 'Run Tests'

          - task: PublishTestResults@2
            inputs:
              testResultsFiles: '$(testResults)/*.trx'
              testResultsFormat: VSTest
            displayName: 'Publish Test Results'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(testResults)'
              ArtifactName: 'AutomationTestReports'
            displayName: 'Publish Test Reports'

  - stage: Deploy
    displayName: 'Deploy to Environment'
    dependsOn: Test
    jobs:
      - job: Deploy
        displayName: 'Deploy Artifacts'
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: current
              downloadType: single
              artifactName: 'AutomationTestReports'
            displayName: 'Download Build Artifacts'

          - script: |
              echo "Deploying test reports to Azure Blob Storage or other targets."
            displayName: 'Deploy Automation Reports'
