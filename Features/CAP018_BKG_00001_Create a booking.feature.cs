// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace iCargoUIAutomation.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CAP018 Test Cases")]
    public partial class CAP018TestCasesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CAP018_BKG_00001_Create a booking.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "CAP018 Test Cases", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CAP018_BKG_00001_iCargo Login and Create New Shipment")]
        [NUnit.Framework.CategoryAttribute("CAP018")]
        [NUnit.Framework.CategoryAttribute("CAP018_BKG_00001")]
        [NUnit.Framework.CategoryAttribute("MAD")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/CAP018_MaintainBooking_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:CAP018_BKG_00001")]
        public void CAP018_BKG_00001_ICargoLoginAndCreateNewShipment(string column0, string column1, string column2, string column3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CAP018",
                    "CAP018_BKG_00001",
                    "MAD",
                    "DataSource:../TestData/CAP018_MaintainBooking_TestData.xlsx",
                    "DataSet:CAP018_BKG_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAP018_BKG_00001_iCargo Login and Create New Shipment", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 7
 testRunner.When("User enters screen name as \'CAP018\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.Then("User enters into the  iCargo \'Maintain Booking\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 9
 testRunner.And("User clicks on New/List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.And("User enters shipment details with Origin \"<Origin>\", Destination \"<Destination>\"," +
                        " Product Code \"<ProductCode>\" and Agent code \"<AgentCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.And("User enters Shipper \"<ShipperCode>\" and Consignee \"<ConsigneeCode>\" details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("User enters commodity details with Commodity \"<Commodity>\", Pieces \"<Piece>\", Wei" +
                        "ght \"<Weight>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And("User selects flight for \"<ProductCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And("User clicks on Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CAP018_BKG_00003_Create a booking for an unknown shipper on a pax flight")]
        [NUnit.Framework.CategoryAttribute("CAP018")]
        [NUnit.Framework.CategoryAttribute("CAP018_BKG_00003")]
        [NUnit.Framework.CategoryAttribute("MAD")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/CAP018_MaintainBooking_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:CAP018_BKG_00001")]
        public void CAP018_BKG_00003_CreateABookingForAnUnknownShipperOnAPaxFlight(string column0, string column1, string column2, string column3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CAP018",
                    "CAP018_BKG_00003",
                    "MAD",
                    "DataSource:../TestData/CAP018_MaintainBooking_TestData.xlsx",
                    "DataSet:CAP018_BKG_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAP018_BKG_00003_Create a booking for an unknown shipper on a pax flight", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 30
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 31
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 32
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 33
 testRunner.When("User enters screen name as \'CAP018\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
 testRunner.Then("User enters into the  iCargo \'Maintain Booking\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.And("User clicks on New/List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("User enters shipment details with Origin \"<Origin>\", Destination \"<Destination>\"," +
                        "Agent Code \"<AgentCode>\", Product Code \"<ProductCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("User enters Unknown Shipper \"<ShipperCode>\" and Consignee \"<ConsigneeCode>\" with " +
                        "all details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.And("User enters commodity details with Commodity \"<Commodity>\", Pieces \"<Piece>\", Wei" +
                        "ght \"<Weight>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("User selects flight for \"<ProductCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("User clicks on Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CAP018_BKG_00007_iCargo Login and Create New AVI Shipment")]
        [NUnit.Framework.CategoryAttribute("CAP018")]
        [NUnit.Framework.CategoryAttribute("CAP018_BKG_00007")]
        [NUnit.Framework.CategoryAttribute("MAD")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/CAP018_MaintainBooking_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:CAP018_BKG_00001")]
        public void CAP018_BKG_00007_ICargoLoginAndCreateNewAVIShipment(string column0, string column1, string column2, string column3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CAP018",
                    "CAP018_BKG_00007",
                    "MAD",
                    "DataSource:../TestData/CAP018_MaintainBooking_TestData.xlsx",
                    "DataSet:CAP018_BKG_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAP018_BKG_00007_iCargo Login and Create New AVI Shipment", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 88
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 89
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 90
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 91
 testRunner.When("User enters screen name as \'CAP018\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 92
 testRunner.Then("User enters into the  iCargo \'Maintain Booking\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 93
 testRunner.And("User clicks on New/List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
 testRunner.And("User enters shipment details with Origin \"<Origin>\", Destination \"<Destination>\"," +
                        " Product Code \"<ProductCode>\" and Agent code \"<AgentCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
 testRunner.And("User enters Shipper \"<ShipperCode>\" and Consignee \"<ConsigneeCode>\" details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.And("User enters commodity details with Commodity \"<Commodity>\", Pieces \"<Piece>\", Wei" +
                        "ght \"<Weight>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 97
 testRunner.And("User selects flight for \"<ProductCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 98
 testRunner.And("User clicks on Save button and fills the checksheet details to generate awb", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CAP018_BKG_00009_Save a template from a booking")]
        [NUnit.Framework.CategoryAttribute("CAP018")]
        [NUnit.Framework.CategoryAttribute("CAP018_BKG_00009")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/CAP018_MaintainBooking_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:CAP018_BKG_00001")]
        public void CAP018_BKG_00009_SaveATemplateFromABooking(string column0, string column1, string column2, string column3, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CAP018",
                    "CAP018_BKG_00009",
                    "DataSource:../TestData/CAP018_MaintainBooking_TestData.xlsx",
                    "DataSet:CAP018_BKG_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAP018_BKG_00009_Save a template from a booking", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 119
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 120
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 121
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 122
 testRunner.When("User enters screen name as \'CAP018\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 123
 testRunner.Then("User enters into the  iCargo \'Maintain Booking\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 124
 testRunner.And("User clicks on New/List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.And("User enters shipment details with Origin \"<Origin>\", Destination \"<Destination>\"," +
                        " Product Code \"<ProductCode>\" and Agent code \"<AgentCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.And("User enters Shipper \"<ShipperCode>\" and Consignee \"<ConsigneeCode>\" details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 127
 testRunner.And("User enters commodity details with Commodity \"<Commodity>\", Pieces \"<Piece>\", Wei" +
                        "ght \"<Weight>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
 testRunner.And("User selects flight for \"<ProductCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 129
 testRunner.And("User clicks on Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 130
 testRunner.And("User enters the AWB number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 131
 testRunner.And("User clicks on New/List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 132
 testRunner.And("User clicks on Select/Save Template to save the template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
