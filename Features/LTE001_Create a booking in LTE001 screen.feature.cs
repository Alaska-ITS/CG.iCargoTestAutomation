// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace iCargoUIAutomation.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("LTE001 Test Cases")]
    public partial class LTE001TestCasesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "LTE001_Create a booking in LTE001 screen.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "LTE001 Test Cases", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_00001_Create a PP AWB in LTE001 for a known shipper")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00001")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_00001_CreateAPPAWBInLTE001ForAKnownShipper(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00001",
                    "smoke",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_00001_Create a PP AWB in LTE001 for a known shipper", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 7
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 8
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 9
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_00002_Create an AWB in LTE001 for an unknown shipper on a restricted p" +
            "ax flight")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00002")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_00002_CreateAnAWBInLTE001ForAnUnknownShipperOnARestrictedPaxFlight(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00002",
                    "smoke",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_00002_Create an AWB in LTE001 for an unknown shipper on a restricted p" +
                    "ax flight", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 30
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 31
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 32
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 33
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 36
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\",Unknown ShipperC" +
                        "ode \"<UnknownShipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And("User saves the shipment details validate error message as \"The Shipper does not h" +
                        "ave a Valid Certificate Type\" and capture AWB number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_00003_Create a DG AWB in LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00003")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_00003_CreateADGAWBInLTE001(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00003",
                    "smoke",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_00003_Create a DG AWB in LTE001", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 55
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 56
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 57
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 58
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 60
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 61
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 63
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
 testRunner.And("User selects an available flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 69
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 70
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'ALT Dangerous" +
                        " Goods\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
 testRunner.And(@"User Save Shipment with DG Details & Capture Checksheet with ChargeType ""<ChargeType>"",UNID ""<UNID>"", ProperShipmentName ""<ProperShipmentName>"", PackingInstruction ""<PackingInstruction>"",NoOfPkg ""<Piece>"", NetQtyPerPkg ""<NetQtyPerPkg>"", ReportableQnty ""<ReportableQnty>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_00004_Create an AWB in LTE001 using a specific commodity code")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00004")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_00004_CreateAnAWBInLTE001UsingASpecificCommodityCode(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00004",
                    "smoke",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_00004_Create an AWB in LTE001 using a specific commodity code", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 80
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 81
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 82
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 83
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 85
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 86
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
 testRunner.And("User selects an available flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 97
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 98
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 103
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.And("User validates the commodity charge amount", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_00005_Create a CC AWB in LTE001 for a known shipper")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00005")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_00005_CreateACCAWBInLTE001ForAKnownShipper(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00005",
                    "smoke",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_00005_Create a CC AWB in LTE001 for a known shipper", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 107
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 108
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 109
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 110
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 111
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 112
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 113
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 115
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 116
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 117
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 118
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 119
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 120
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 121
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 127
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 129
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 130
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_00007_Create an AWB in LTE001 that has pieces that fail screening")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00007")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_00007_CreateAnAWBInLTE001ThatHasPiecesThatFailScreening(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00007",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_00007_Create an AWB in LTE001 that has pieces that fail screening", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 133
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 134
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 135
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 136
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 137
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 138
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 139
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 140
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 141
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 143
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 144
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 145
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 146
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 147
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 148
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 149
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 150
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 151
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 152
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 153
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 154
 testRunner.And("USer adds another screening line", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 155
 testRunner.And("User enters the Screening details for row 2 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Fail\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 156
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 157
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 158
 testRunner.And("User saves shipment and validate the popped up message as \"Blocked for screening\"" +
                        " for a Confirmed AWB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_00008_Reopen an AWB and change piece count and weight and reexecute")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00008")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_00008_ReopenAnAWBAndChangePieceCountAndWeightAndReexecute(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00008",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_00008_Reopen an AWB and change piece count and weight and reexecute", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 161
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 162
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 163
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 165
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 166
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 167
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 168
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 169
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 170
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 171
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 172
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 174
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 175
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 176
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 177
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 178
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 179
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 180
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 181
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 182
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 183
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 184
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 185
 testRunner.When("User enters the Executed AWB number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 186
 testRunner.And("User Reopens the AWB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 187
 testRunner.And("User verifies and Update the field \'piece&weight\' with updated value as \"<Updated" +
                        "Value>\" in the Shipment Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 188
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 189
 testRunner.And("User verifies and Update the Flight Details with \'piece&weight\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 190
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 191
 testRunner.And("user opens the Charge Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 192
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 193
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 194
 testRunner.And("User verifies and Update the Acceptance Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 195
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 196
 testRunner.And("User verifies and Update the Screening Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 197
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 198
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 199
 testRunner.And("User clicks on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 200
 testRunner.And("User handles the error popups with errorType as \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 201
 testRunner.And("User closes the Payment Portal tab and retry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 202
 testRunner.And("User handles the error popups with errorType as \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 203
 testRunner.And("User handles the error popups with errorType as \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 204
 testRunner.And("User validates the AWB is \"EXECUTED\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_00009_Create and accept an AWB for a known shipper booked on pax fligh" +
            "ts without screening details")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00009")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_00009_CreateAndAcceptAnAWBForAKnownShipperBookedOnPaxFlightsWithoutScreeningDetails(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00009",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_00009_Create and accept an AWB for a known shipper booked on pax fligh" +
                    "ts without screening details", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 207
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 208
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 209
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 210
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 211
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 212
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 213
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 214
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 215
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 216
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 217
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 218
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 219
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 220
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 221
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 222
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 223
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 224
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 225
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 226
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 227
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 228
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 229
 testRunner.And("User saves shipment and validate the popped up message as \"Blocked for screening\"" +
                        " for a Confirmed AWB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_00010_Reopen an AWB and change the final destination and reexecute")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00010")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_00010_ReopenAnAWBAndChangeTheFinalDestinationAndReexecute(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00010",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_00010_Reopen an AWB and change the final destination and reexecute", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 232
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 233
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 234
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 235
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 236
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 237
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 238
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 239
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 240
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 241
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 242
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 243
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 244
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 245
 testRunner.And("User selects an available flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 246
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 247
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 248
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 249
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 250
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 251
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 252
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 253
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 254
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 255
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 256
 testRunner.When("User enters the Executed AWB number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 257
 testRunner.And("User Reopens the AWB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 258
 testRunner.And("User verifies and Update the field \'destination\' with updated value as \"<UpdatedV" +
                        "alue>\" in the Shipment Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 259
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 260
 testRunner.And("User verifies and Update the Flight Details with \'destination\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 261
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 262
 testRunner.And("User selects an available flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 263
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 264
 testRunner.And("user opens the Charge Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 265
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 266
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 267
 testRunner.And("User verifies and Update the Acceptance Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 268
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 269
 testRunner.And("User verifies and Update the Screening Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 270
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 271
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 272
 testRunner.And("User saves the details with capturing irregularity for flight destination change " +
                        "with ChargeType \"<ChargeType>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 273
 testRunner.And("User validates the AWB is \"EXECUTED\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000011_Create an AWB for a known shipper that has first flight on frei" +
            "ghter and next flight on pax")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00011")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000011_CreateAnAWBForAKnownShipperThatHasFirstFlightOnFreighterAndNextFlightOnPax(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00011",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000011_Create an AWB for a known shipper that has first flight on frei" +
                    "ghter and next flight on pax", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 276
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 277
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 278
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 279
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 280
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 281
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 282
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 283
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 284
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 285
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 286
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 287
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 288
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 289
 testRunner.And("User selects first flight as \'Cargo-Only\' flight and second flight as \'Combinatio" +
                        "n\' flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 290
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 291
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 292
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 293
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 294
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 295
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 296
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 297
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 298
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000012_Create an AWB for an unknown shipper going from freighter to pa" +
            "x")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00012")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000012_CreateAnAWBForAnUnknownShipperGoingFromFreighterToPax(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00012",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000012_Create an AWB for an unknown shipper going from freighter to pa" +
                    "x", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 301
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 302
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 303
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 304
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 305
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 306
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 307
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\",Unknown ShipperC" +
                        "ode \"<UnknownShipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 308
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 309
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 310
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 311
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 312
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 313
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 314
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 315
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 316
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 317
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 318
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 319
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 320
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 321
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 322
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 323
 testRunner.And("User saves the shipment details validate error message as \"The Shipper does not h" +
                        "ave a Valid Certificate Type\" and capture AWB number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000015_Create an AWB for a CAO DG shipment and book on a pax flight")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00015")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000015_CreateAnAWBForACAODGShipmentAndBookOnAPaxFlight(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00015",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000015_Create an AWB for a CAO DG shipment and book on a pax flight", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 326
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 327
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 328
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 329
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 330
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 331
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 332
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 333
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 334
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 335
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 336
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 337
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 338
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 339
 testRunner.And("User selects an \"Combination\" flight having Embargo error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 340
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 341
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 342
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 343
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 344
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 345
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 346
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'ALT Dangerous" +
                        " Goods\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 347
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 348
 testRunner.And("User validates the error message \"SPECIFIED SHIPMENT TYPE NOT SUITED FOR SELECTED" +
                        " AIRCRAFT TYPE\" in the Embargo Details popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000016_Create an AWB for an Employee Shipment")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00016")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000016_CreateAnAWBForAnEmployeeShipment(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00016",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000016_Create an AWB for an Employee Shipment", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 351
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 352
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 353
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 354
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 355
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 356
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 357
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 358
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 359
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 360
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 361
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 362
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 363
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 364
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 365
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 366
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 367
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 368
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 369
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 370
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 371
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 372
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 373
 testRunner.And("User clicks on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 374
 testRunner.And("User captures the checksheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 375
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 376
 testRunner.And("User clicks on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 377
 testRunner.And("User handles the error popups with errorType as \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 378
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000017_Create a COMAT AWB")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00017")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000017_CreateACOMATAWB(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00017",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000017_Create a COMAT AWB", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 381
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 382
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 383
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 384
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 385
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 386
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 387
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 388
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 389
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 390
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 391
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 392
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 393
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 394
 testRunner.And("User selects an available flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 395
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 396
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 397
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 398
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 399
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 400
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 401
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 402
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 403
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 404
 testRunner.And("User clicks on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 405
 testRunner.And("User handles the error popups with errorType as \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 406
 testRunner.And("User validates the AWB is \"EXECUTED\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000019_Create an AWB for an Employee who is an unknown shipper for a p" +
            "roduct other than Employee Shipment")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00019")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000019_CreateAnAWBForAnEmployeeWhoIsAnUnknownShipperForAProductOtherThanEmployeeShipment(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00019",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000019_Create an AWB for an Employee who is an unknown shipper for a p" +
                    "roduct other than Employee Shipment", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 409
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 410
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 411
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 412
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 413
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 414
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 415
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\",Unknown ShipperC" +
                        "ode \"<UnknownShipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 416
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 417
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 418
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 419
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 420
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 421
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 422
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 423
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 424
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 425
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 426
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 427
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 428
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 429
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 430
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 431
 testRunner.And("User clicks on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 432
 testRunner.And("User saves the shipment details validate error message as \"No credit account exis" +
                        "ts.\" and capture AWB number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000021_Rebook an AWB in LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00021")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000021_RebookAnAWBInLTE001(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00021",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000021_Rebook an AWB in LTE001", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 440
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 441
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 442
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 443
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 444
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 445
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 446
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 447
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 448
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 449
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 450
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 451
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 452
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 453
 testRunner.And("User selects an available flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 454
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 455
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 456
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 457
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 458
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 459
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 460
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 461
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 462
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 463
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 464
 testRunner.When("User enters the Executed AWB number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 465
 testRunner.And("User Reopens the AWB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 466
 testRunner.And("User verifies and Update the field \'destination\' with updated value as \"<UpdatedV" +
                        "alue>\" in the Shipment Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 467
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 468
 testRunner.And("User verifies and Update the Flight Details with \'destination\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 469
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 470
 testRunner.And("User selects an available flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 471
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 479
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 480
 testRunner.And("User saves the details with capturing irregularity for flight destination change " +
                        "with ChargeType \"<ChargeType>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 481
 testRunner.And("User validates the AWB is \"EXECUTED\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000023_Create an AWB for an unknown shipper on a freighter")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00023")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000023_CreateAnAWBForAnUnknownShipperOnAFreighter(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00023",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000023_Create an AWB for an unknown shipper on a freighter", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 484
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 485
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 486
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 487
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 488
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 489
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 490
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\",Unknown ShipperC" +
                        "ode \"<UnknownShipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 491
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 492
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 493
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 494
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 495
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 496
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 497
 testRunner.And("User selects an \"Cargo-Only\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 498
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 499
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 500
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 501
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 502
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 503
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 504
 testRunner.And("User clicks on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 505
 testRunner.And("User captures the checksheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 508
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 509
 testRunner.And("User clicks on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 510
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000024_Create an AWB for an unknown shipper with routing wholly within" +
            " SOA")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00024")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000024_CreateAnAWBForAnUnknownShipperWithRoutingWhollyWithinSOA(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00024",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000024_Create an AWB for an unknown shipper with routing wholly within" +
                    " SOA", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 513
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 514
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 515
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 516
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 517
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 518
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 519
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\",Unknown ShipperC" +
                        "ode \"<UnknownShipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 520
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 521
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 522
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 523
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 524
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 525
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 526
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 527
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 528
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 529
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 530
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 531
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 532
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 533
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 534
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 535
 testRunner.And("User clicks on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 536
 testRunner.And("User captures the checksheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 537
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 538
 testRunner.And("User clicks on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 539
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LTE001_ACC_000028_Change the rated customer field when accepting an AWB")]
        [NUnit.Framework.CategoryAttribute("LTE001")]
        [NUnit.Framework.CategoryAttribute("LTE001_ACC_00028")]
        [NUnit.Framework.CategoryAttribute("DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx")]
        [NUnit.Framework.CategoryAttribute("DataSet:LTE001_ACC_00001")]
        public void LTE001_ACC_000028_ChangeTheRatedCustomerFieldWhenAcceptingAnAWB(
                    string column0, 
                    string column1, 
                    string column2, 
                    string column3, 
                    string column4, 
                    string column5, 
                    string column6, 
                    string column7, 
                    string column8, 
                    string column9, 
                    string column10, 
                    string column11, 
                    string column12, 
                    string column13, 
                    string column14, 
                    string column15, 
                    string column16, 
                    string column17, 
                    string column18, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "LTE001",
                    "LTE001_ACC_00028",
                    "DataSource:../TestData/LTE001_CreateShipment_TestData.xlsx",
                    "DataSet:LTE001_ACC_00001"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Column0", column0);
            argumentsOfScenario.Add("Column1", column1);
            argumentsOfScenario.Add("Column2", column2);
            argumentsOfScenario.Add("Column3", column3);
            argumentsOfScenario.Add("Column4", column4);
            argumentsOfScenario.Add("Column5", column5);
            argumentsOfScenario.Add("Column6", column6);
            argumentsOfScenario.Add("Column7", column7);
            argumentsOfScenario.Add("Column8", column8);
            argumentsOfScenario.Add("Column9", column9);
            argumentsOfScenario.Add("Column10", column10);
            argumentsOfScenario.Add("Column11", column11);
            argumentsOfScenario.Add("Column12", column12);
            argumentsOfScenario.Add("Column13", column13);
            argumentsOfScenario.Add("Column14", column14);
            argumentsOfScenario.Add("Column15", column15);
            argumentsOfScenario.Add("Column16", column16);
            argumentsOfScenario.Add("Column17", column17);
            argumentsOfScenario.Add("Column18", column18);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LTE001_ACC_000028_Change the rated customer field when accepting an AWB", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 542
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 543
 testRunner.Given("User wants to execute the example \"<Execute>\" for the scenario \"<Tags>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 544
 testRunner.When("User switches station if BaseStation other than \"<Origin>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 545
 testRunner.And("User enters the screen name as \'LTE001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 546
 testRunner.Then("User enters into the  iCargo \'Create Shipment\' page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 547
 testRunner.When("user clicks on the List button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 548
 testRunner.And("User enters the Participant details with AgentCode \"<AgentCode>\", ShipperCode \"<S" +
                        "hipperCode>\", ConsigneeCode \"<ConsigneeCode>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 549
 testRunner.And("User clicks on the ContinueParticipant button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 550
 testRunner.And("User enters the Certificate details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 551
 testRunner.And("User clicks on the ContinueCertificate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 552
 testRunner.And(@"User enters the Shipment details with Origin ""<Origin>"", Destination ""<Destination>"", ProductCode ""<ProductCode>"", SCCCode ""<SCC>"", Commodity ""<Commodity>"", ShipmentDescription""<ShipmentDescription>"", ServiceCargoClass ""<ServiceCargoClass>"", Piece ""<Piece>"", Weight ""<Weight>""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 553
 testRunner.And("User clicks on the ContinueShipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 554
 testRunner.And("User clicks on the Select Flight Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 555
 testRunner.And("User selects an \"Combination\" flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 556
 testRunner.And("User clicks on the ContinueFlightDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 557
 testRunner.And("User enters the Charge details with ChargeType \"<ChargeType>\" and ModeOfPayment \"" +
                        "<ModeOfPayment>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 558
 testRunner.And("User checks the ThirdParty checkbox and enters the RatedCustomer \"<RatedCustomer>" +
                        "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 559
 testRunner.And("User clicks on the CalculateCharges button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 560
 testRunner.And("User clicks on the ContinueChargeDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 561
 testRunner.And("User enters the Acceptance details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 562
 testRunner.And("User clicks on the ContinueAcceptanceDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 563
 testRunner.And("User enters the Screening details for row 1 with screeingMethod as \'Transfer Mani" +
                        "fest Verified\' and ScreeningResult as \'Pass\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 564
 testRunner.And("User clicks on the ContinueScreeningDetails button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 565
 testRunner.And("User checks the AWB_Verified checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 566
 testRunner.And("User saves all the details & handles all the popups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 567
 testRunner.And("User validates the CID under Account Info in paymentportal with the RatedCustomer" +
                        " \"<RatedCustomer>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
